name: CICD

on:
  push:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        # os: [macos-latest, ubuntu-latest, windows-latest]
        os: [windows-latest]
        # os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
          version: "0.7.17"

      - name: Install dependencies
        run: uv sync --locked --all-extras --dev

      - name: Windows only - Install Dependency Walker
        run: python scripts/windows-install-dependency-walker.py

      # pyinstaller worked fine on linux but causes anti-virus alert on win11, thus using nuitka
      - name: Build executable
        # windows does not like multiline commands separated by \. it uses ^
        run: |
          uv run nuitka src/tstt_rl.py --mode=app --output-dir=dist --include-data-dir=src/assets=assets --include-module=tcod

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tstt_rl_${{ runner.os }}
          # these are the single file distributables. For now that's what we want. we could also go with the `tstt_rl.dist/` but why bother at this point.
          path: |
            dist/*.exe
            dist/*.bin
          # this is for also having the folder versions
          # path: |
          #   dist/*.exe
          #   dist/*.bin
          #   dist/*.app/**/*
          #   dist/*.dist/**/*
          include-hidden-files: true
